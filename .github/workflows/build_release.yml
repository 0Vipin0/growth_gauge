name: Build and Release Growth Gauge

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable
          version: 3.22.1
          cache: true
          cache-sdk: true

      - name: Get dependencies
        run: flutter pub get

      - name: Flutter Analyze
        run: flutter analyze

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev libglib2.0-dev

      - name: Build Application Release
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter build linux --release
          fi
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter build windows --release
          fi

      - name: Zip Release Artifacts
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            cd build/linux/x64/release/bundle
            zip -r ../../../../../linux_release.zip .
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath windows_release.zip
          fi

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-release
          path: |
            linux_release.zip
            windows_release.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ubuntu-latest-release/linux_release.zip
          asset_name: growth_gauge_linux-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-latest-release/windows_release.zip
          asset_name: growth_gauge_windows-${{ github.ref_name }}.zip
          asset_content_type: application/zip